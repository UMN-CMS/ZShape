process Zefficiency  = 
{

   # initialize  MessageLogger
   # include "FWCore/MessageService/data/MessageLogger.cfi"
   # replace MessageLogger.cout.threshold = "ERROR"
   # replace MessageLogger.cerr.default.limit = 10

   service = Timing {}
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits = 11
         untracked uint32 mix = 12345
      }
   }



include "ZShape/EffAcc/data/PythiaZee.cfg"
   replace maxEvents.input = 500
   replace PythiaSource.pythiaPylistVerbosity = 1
   replace PythiaSource.maxEventsToPrint = 1


   # SIM + DIGI part
  #
  #   include "Configuration/Generator/test/FullSim.cfi"		
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
  #    path p = {genfilter}




   # Event, etc. output
   #
   module GEN-SIM-DIGI = PoolOutputModule 
   { 
     untracked string fileName = "gf-test.root" 
     untracked vstring outputCommands = {
       "keep *",
       "drop *_ecaldigi_*_*"      
     }
#     untracked PSet SelectEvents = {
#           vstring SelectEvents = {"p"}
#        }

   }

   

    module mcEff = ZEfficiencyCalculator {
	
	untracked string outHistogramsFile      = "jm-test.root" 
	

	untracked VPSet Effs = {
	    {
		untracked string name = "Seeding"
		untracked string effFile = "efficiencyExample.root"
		untracked string variable = "eta"
	    }
	}
	
	untracked bool   writeHistoBeforeEndJob = false
	
	untracked VPSet ZDefs = { 
	    {
		untracked string name="Golden-EB-EB"
		untracked vstring e1 = { "ACC(EB)","Seeding" }
		untracked vstring e2 = { "ACC(EB)","Seeding" }
		untracked vstring Z = { }
	    },
	    {
		untracked string name="Golden-EB-EE"
		untracked vstring e1 = { "ACC(EB)","Seeding" }
		untracked vstring e2 = { "ACC(EE)","Seeding" }
		untracked vstring Z = { }
	    }
	}
    }
    

    module dumpEv = EventContentAnalyzer {}
    
    endpath outpath = { 
	#GEN-SIM-DIGI
	mcEff
	, dumpEv
    }
    
}	
