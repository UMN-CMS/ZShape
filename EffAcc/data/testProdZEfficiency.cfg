process Zefficiency  = 
{

   # initialize  MessageLogger
   # include "FWCore/MessageService/data/MessageLogger.cfi"
   # replace MessageLogger.cout.threshold = "ERROR"
   # replace MessageLogger.cerr.default.limit = 10

   service = Timing {}
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits = 11
         untracked uint32 mix = 12345
      }
   }



include "ZShape/EffAcc/data/PythiaZee.cfg"
   replace maxEvents.input = 500
   replace PythiaSource.pythiaPylistVerbosity = 1
   replace PythiaSource.maxEventsToPrint = 1


   # SIM + DIGI part
  #
  #   include "Configuration/Generator/test/FullSim.cfi"		
  include "Configuration/StandardSequences/data/VtxSmearedGauss.cff" 
  #    path p = {genfilter}




   # Event, etc. output
   #
   module GEN-SIM-DIGI = PoolOutputModule 
   { 
     untracked string fileName = "gf-test.root" 
     untracked vstring outputCommands = {
       "keep *",
       "drop *_ecaldigi_*_*"      
     }
#     untracked PSet SelectEvents = {
#           vstring SelectEvents = {"p"}
#        }

   }

   

   module mcEff = ZEfficiencyCalculator {

     untracked string outHistogramsFile      = "gf-friday-test.root" 

     untracked string inputEffHistoFile      = "/data/franzoni/cmssw/ph/tools/eleEffPascal.root" 
     untracked string   inputRootFile1    = "/data/franzoni/cmssw/ph/tools/efficiencyExample1.root" 
     untracked string   inputRootFile2    = "/data/franzoni/cmssw/ph/tools/efficiencyExample2.root" 
     untracked string   inputRootFile3    = "/data/franzoni/cmssw/ph/tools/efficiencyExample3.root" 


     untracked string cut1Histo              = "seeding alone"
#     untracked string cut1Histo              = "seeding alone flat"
     untracked string cut2Histo              = "tracking alone"
     untracked string cut3Histo              = "eReco alone"


     untracked bool   writeHistoBeforeEndJob = false

   }


   module dumpEv = EventContentAnalyzer {}

   endpath outpath = { 
                       #GEN-SIM-DIGI
                        mcEff
                       , dumpEv
                     }
  
}	
